- MongoDB + Google Guava Loading Cache
- Bungee 1.20

- /ban [Spieler] [Reason]
- /tempban [Spieler(wenn auf bungee geten sonst uuid-fetcher] [Reason] [Integer] [Einheit(min, hours, days, months, years)] -> bannt spieler gibt ban unique ban id
- /baninfo [UBID]
- /unban [UBID]
- /history [Spieler]


/ban [Spieler] [Du hast gehackt]
- wenn spieler schon gebannt? fehler nachricht
- permanent bann
- if args.length > 1 dann ausführen, wenn nicht fehler nachricht (kein grund angegeben)
- args[0] = target | wenn on geten wenn off uuid fetcher -> fehler? spieler existiert nicht
- args.length > 1 = grund
- in "permanent_banned_players" speichern mit folgenden punkten:
  - ban_id = random buchstaben und zahlen kombination 5 zeichen lang
  - bannend_player_uuid = uuid von bannend_player
  - bannend_player_name = name von bannend_player
  - banner_uuid = uuid vom spieler der gebannt hat
  - banner_name = name vom spieler der gebannt hat
  - reason = grund
  - ban_timestamp = ban timestamp (long)
- in "all_player_bans" speichern mit folgenden punkten:
    - permanent_ban = boolean
    - ban_id = random buchstaben und zahlen kombination 5 zeichen lang
    - bannend_player_uuid = uuid von bannend_player
    - bannend_player_name = name von bannend_player
    - banner_uuid = uuid vom spieler der gebannt hat
    - banner_name = name vom spieler der gebannt hat
    - reason = grund
    - ban_timestamp = ban timestamp (long)
    - ban_until_timestamp = ban until timestamp (long)
- wenn spieler joint kicken -> prefix... Du wurdest permanent gebannt!... Grund: ..., Von: ..., Gebannt am: ...

/tempban [Spieler] [Time] [Reason]
- wenn spieler schon gebannt? fehler nachricht
- temporärer bann
- if args.length > 2 dann ausführen, wenn nicht fehler nachricht
- args[1] kann nicht konvertiert werden? fehler nachricht falsche Zeit formatierung
- args[0] = target | wenn on geten wenn off uuid fetcher -> fehler? spieler existiert nicht
- in "temp_bannend_players" speicher mit folgenden punkten:
  - ban_id = random buchstaben und zahlen kombination 5 zeichen lang
    - bannend_player_uuid = uuid von bannend_player
    - bannend_player_name = name von bannend_player
    - banner_uuid = uuid vom spieler der gebannt hat
    - banner_name = name vom spieler der gebannt hat
    - reason = grund
    - ban_timestamp = ban timestamp (long)
    - ban_until_timestamp = ban until timestamp (long)
- in "all_player_bans" speichern mit folgenden punkten:
    - permanent_ban = boolean
    - ban_id = random buchstaben und zahlen kombination 5 zeichen lang
    - bannend_player_uuid = uuid von bannend_player
    - bannend_player_name = name von bannend_player
    - banner_uuid = uuid vom spieler der gebannt hat
    - banner_name = name vom spieler der gebannt hat
    - reason = grund
    - ban_timestamp = ban timestamp (long)
    - ban_until_timestamp = ban until timestamp (long)
- wenn spieler joint kicken -> prefix... Du wurdest gebannt!... Grund: ..., Von: ..., Bis: ..., Gebannt am: ...

/baninfo [ban_id]
- wenn ban_id nicht existiert, fehler nachricht
- if args.length != 1 fehler, syntax
- spieler nachricht senden:
  - Temp:
    - gebannter spieler
    - von spieler
    - grund
    - wann gebannt ...
    - bis wann gebannt ...
  - Perma:
     - Permanent Gebannt.
     - gebannter spieler
     - von spieler
     - grund
     - wann gebannt

/unban [spieler]
- wenn spieler gebannt, entbannen
- wenn spieler nicht existiert fehler nachricht
- wenn spieler nicht gebannt fehler nachricht

/ history [spieler]
- alle bans getten von spieler und anzeigen in gui oder als nachricht
